import streamlit as st
from constants import PAGE_BANNER
from utils import create_container
from st_on_hover_tabs import on_hover_tabs
from constants import HOME_PAGE_DESCRIPTION

class Menu:
    def __init__(self):
        self.PAGE_BANNER = PAGE_BANNER
        
    def load_navbar(self):
        st.markdown('<style>' + open('./assets/css/styles.css').read() + '</style>', unsafe_allow_html=True)
        
        with st.sidebar:
            selected_task = on_hover_tabs(
                tabName=['Home Page', 'Task 01', 'About Us'],
                iconName=['home', 'settings', 'groups'],
                styles = {
                    'navtab': {'background-color':'none',
                                'color': '#fff',
                                'padding': '40px 0px 10px 0px',
                                'border-radius': '0px',
                                'font-size': '18px',    
                                'transition': '.5s',
                                'white-space': 'nowrap',
                                'text-transform': 'uppercase',
                    },
                    'tabOptionsStyle': {':hover :hover': {'color': '#d73f3e',
                                                    'cursor': 'pointer'},
                                    },
                    'iconStyle':{'position':'fixed',    
                                'left':'11.5px'},
                    'tabStyle' : {'background-color':'rgba(0, 0, 0, 0)',
                                'list-style-type': 'none',
                                'margin-bottom': '30px',
                                },
                },
                default_choice=0)
                
        if selected_task == 'Home Page':
            self.home_page()
        elif selected_task == 'Task 01':
            self.model_page()
        elif selected_task == 'About Us':
            self.about_us_page()
    
    def home_page(self):
        with st.columns([3,4,3])[1]:
            st.image(self.PAGE_BANNER, use_column_width="auto")
        
        st.write("""
        <div class="home">
            <center class="heading">
                <h1>
                Enhancing Global Mapping Through AI
                <h4 class="caption">
                    A collaborative project of the Humanitarian OpenStreetMap Team and Omdena
                </h4>
                </h1>
            </center>
        </div>         
        """, unsafe_allow_html=True)
        
        with st.expander("", expanded=True):
            st.write(HOME_PAGE_DESCRIPTION, unsafe_allow_html=True)

        with st.columns([3,4,3])[1]:
            st.image(self.PAGE_BANNER, use_column_width="auto")
    
    def model_page(self):
        st.write("""
            <div style='text-align:left;'>
                <h2 style='font-size: 300%; font-weight:800;'>Task 01: Models Generated</h2>
                <p style='color: #00000095'>Here are all the different models generated by the team.</p>
                <hr>
            </div>
        """, unsafe_allow_html=True)
        
        col = st.columns(3)
        
        with col[0]:
            create_container(
                task="Task 01-01",
            )

            create_container(
                task="Task 01-04",
            )
                
        with col[1]:
            create_container(
                task="Task 01-02",
            )
        
            create_container(
                task="Task 01-05",
            )
        
        with col[2]:
            create_container(
                task="Task 01-03",
            )

            create_container(
                task="Task 01-06",
            )
            
    def about_us_page(self):
        with st.expander("", expanded=True):
            with open("./assets/contributors.txt", "r") as f:
                data = f.read().splitlines()
                full_string = ""
                
                for i in range(0, len(data), 3):
                    try:
                        contributor1 = data[i].split(",")[0].strip().title()
                        contributor2 = data[i + 1].split(",")[0].strip().title()
                        contributor3 = data[i + 2].split(",")[0].strip().title()

                        contributors = f"""<tr>
                            <td>{contributor1}</td>
                            <td>{contributor2}</td>
                            <td>{contributor3}</td>
                        </tr>
                        """
                        full_string += contributors
                    
                    except IndexError:
                        if len(data[i:])==2:
                            full_string += f"""<tr>
                                    <td>
                                        {data[i:][0].split(",")[0].strip().title()}
                                    </td>
                                    <td>
                                        {data[i:][1].split(",")[0].strip().title()}
                                    </td>
                                </tr>
                            """
                        elif len(data[i:])==1:
                            full_string += f"""<tr>
                                    <td>
                                        {data[i:][0].split(",")[0].strip().title()}
                                    </td>
                                </tr>
                            """
                with open('./assets/html/team.html', 'r', encoding='utf-8') as file:
                    html_content = file.read()
                
                st.write(html_content.format(team=full_string), unsafe_allow_html=True)