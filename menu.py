import streamlit as st
from constants import PAGE_BANNER
from utils import create_container


class Menu:
    def __init__(self):
        self.PAGE_BANNER = PAGE_BANNER
    
    def home_page(self):
        with st.columns([3,4,3])[1]:
            st.image(self.PAGE_BANNER, use_column_width="auto")
        
        st.write(open('./assets/html/hero.html', 'r').read(), unsafe_allow_html=True)
        
        with st.expander("", expanded=True):
            st.write(open('./assets/html/desc.html', 'r').read(), unsafe_allow_html=True)

        with st.columns([3,4,3])[1]:
            st.image(self.PAGE_BANNER, use_column_width="auto")
    
    def model_page(self):
        st.write("""
            <div style='text-align:center;'>
                <h2 style='text-align:center; font-size: 300%;'>Models Generated</h2>
                <p style='color: #00000095'>Here are all the different models generated by the team.</p>
                <hr>
            </div>
        """, unsafe_allow_html=True)
        
        col = st.columns(3)
        
        with col[0]:
            create_container(
                task="Task 01-01",
                title="Ramp Sam Postprocessing",
                lead="John Doe",
                image_path="assets/images/01.png",
                description="Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nesciunt, autem! Laborum harum porro, earum provident enim ipsum alias doloribus aliquam quas dolores.",
            )

            create_container(
                task="Task 01-04",
                title="Fast Segment Anything Model (FastSAM)",
                lead="John Doe",
                image_path="assets/images/04.png",
                description="Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nesciunt, autem! Laborum harum porro, earum provident enim ipsum alias doloribus aliquam quas dolores.",
            )
                
        with col[1]:
            create_container(
                task="Task 01-02",
                title="Grounding DINO Sam",
                lead="John Doe",
                image_path="assets/images/02.png",
                description="Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nesciunt, autem! Laborum harum porro, earum provident enim ipsum alias doloribus aliquam quas dolores.",
            )
        
            create_container(
                task="Task 01-05",
                title="GNN-Based Multimodal",
                lead="John Doe",
                image_path="assets/images/05.png",
                description="Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nesciunt, autem! Laborum harum porro, earum provident enim ipsum alias doloribus aliquam quas dolores.",
            )
        
        with col[2]:
            create_container(
                task="Task 01-03",
                title="YOLO with Segment Anything Model",
                lead="John Doe",
                image_path="assets/images/03.png",
                description="Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nesciunt, autem! Laborum harum porro, earum provident enim ipsum alias doloribus aliquam quas dolores.",
            )

            create_container(
                task="Task 01-06",
                title="U-Net",
                lead="John Doe",
                image_path="assets/images/06.png",
                description="Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nesciunt, autem! Laborum harum porro, earum provident enim ipsum alias doloribus aliquam quas dolores.",
            )
            
    def about_us_page(self):
        with st.expander("", expanded=True):
            with open("./assets/contributors.txt", "r") as f:
                data = f.read().splitlines()
                full_string = ""
                
                for i in range(0, len(data), 3):
                    try:
                        contributor1 = data[i].split(",")[0].strip().title()
                        contributor2 = data[i + 1].split(",")[0].strip().title()
                        contributor3 = data[i + 2].split(",")[0].strip().title()

                        contributors = f"""<tr>
                            <td>{contributor1}</td>
                            <td>{contributor2}</td>
                            <td>{contributor3}</td>
                        </tr>
                        """
                        full_string += contributors
                    
                    except IndexError:
                        if len(data[i:])==2:
                            full_string += f"""<tr>
                                    <td>
                                        {data[i:][0].split(",")[0].strip().title()}
                                    </td>
                                    <td>
                                        {data[i:][1].split(",")[0].strip().title()}
                                    </td>
                                </tr>
                            """
                        elif len(data[i:])==1:
                            full_string += f"""<tr>
                                    <td>
                                        {data[i:][0].split(",")[0].strip().title()}
                                    </td>
                                </tr>
                            """
                with open('./assets/html/team.html', 'r', encoding='utf-8') as file:
                    html_content = file.read()
                
                st.write(html_content.format(team=full_string), unsafe_allow_html=True)